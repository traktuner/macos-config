#!/usr/bin/env bash
set -euo pipefail

# Prevent running as root
if [[ $(id -u) -eq 0 ]]; then
  echo "❌ Please run bootstrap.sh as your user, not root. Aborting."
  exit 1
fi

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$ROOT_DIR" || { echo "❌ Could not cd to $ROOT_DIR"; exit 1; }

# Load shared functions
source "$ROOT_DIR/core/functions.sh"

# Export helpers into subshells
export ROOT_DIR
export -f ask_for_confirmation ask_for_sudo answer_is_yes
export -f print_info print_success print_error
export -f symlink_from_to modify_file modify_line
export -f insert_to_file_after_line_number uncomment_line prepend_string_to_file
export -f line_exists add_config get_arch
export -f retry safe_defaults_write safe_plistbuddy safe_killall
export -f ensure_directory download_file bootstrap_launch_agent tm_snapshot

ask_for_sudo

print_info "Welcome to your macOS setup bootstrap!"

# Collect all utils scripts into an array
UTILS=()
for f in "$ROOT_DIR/utils"/*.sh; do
  UTILS+=("$f")
done

# Display menu
echo
echo "Please choose an action:"
echo "  0) Run full setup (all scripts)"
i=1
for script in "${UTILS[@]}"; do
  echo "  $i) Run $(basename "$script")"
  ((i++))
done
echo "  q) Quit"
echo

# Handle choice
while true; do
  read -p "Enter choice [0-$((i-1)), q]: " choice
  case "$choice" in
    [Qq] )
      echo "Goodbye!"
      exit 0
      ;;
    0 )
      print_info "Running all setup scripts…"
      for script in "${UTILS[@]}"; do
        print_info "➡️  $(basename "$script")"
        bash "$script" || print_error "Failed: $(basename "$script")"
      done
      break
      ;;
    ''|*[!0-9]*)
      echo "Invalid choice.";;
    *)
      if (( choice >= 1 && choice < i )); then
        sel_script="${UTILS[choice-1]}"
        print_info "Running $(basename "$sel_script")…"
        bash "$sel_script" || print_error "Failed: $(basename "$sel_script")"
        break
      else
        echo "Choice out of range."
      fi
      ;;
  esac
done

print_success "Done! You can now close this terminal."
exec bash
